###
# This is the default TS-setup for dr_blob, pi1 (PIBASE), Version 2.4.0
###
plugin.tx_drblob_pi1 = USER
plugin.tx_drblob_pi1 {
  includeLibs = EXT:dr_blob/Classes/Pi1.php
  userFunc = tx_drblob_pi1->main

  templateFile = EXT:dr_blob/Resources/Private/ClassicTemplates/dr_blob_v2.tmpl
  fileExtIconFolder = {$plugin.tx_drblob.fileExtIconFolder}
  searchFieldList = title,description,author,blob_name,t3ver_label
  emptySearchAtStart = 1
  tryToOpenFileInline = 1
  downloadFilenameUserFunc = 
  renderAsXML = 0
  
  stdWrap.wrap = <div class="tx-drblob-pi1">|</div>
  
  listView {
    limit = 25
    listOrderBy = title
    listOrderDir = 0
    altSubpartMarker = TEMPLATE_LIST
    alternatingLayouts = {$plugin.tx_drblob.alternatingLayouts}
    categoryDivider = ,
    categoryMode = 0
    categorySelection = 
    showAdd2Fav = 0
    
    age_stdWrap {
      age = 1
    }

    author_stdWrap {
      wrap = |
      typolink {
        parameter.field = author_email
      }
    }

    category_stdWrap {
      wrap = |
    }

    date_stdWrap {
      strftime = {$plugin.tx_drblob.dateFormat}
    }
    
    description_stdWrap {
      stripHtml = 1
      crop = {$plugin.tx_drblob.lenghtOfDescription} | ... | 1
    }
    
    downloadLink_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
      typolink {
        ATagBeforeWrap = 1
        ATagParams = class="tx_drblob_downloadlink"
      }
    }
    
    downloadcount_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
    }

    email_stdWrap {
      wrap = |
      typolink {
        parameter.field = author_email
        ATagParams = class="tx_drblob_emaillink"
      }
    }
    
    fileicon_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
      cObject = IMAGE
      cObject.file.import = {$plugin.tx_drblob.fileExtIconFolder}
      cObject.file.import.field = blob_filext
      cObject.file.import.wrap = |.gif
      cObject.altText.field = blob_filext
      cObject.titleText.field = blob_filext

      cObject.stdWrap.ifEmpty.cObject = IMAGE
      cObject.stdWrap.ifEmpty.cObject.file.import = {$plugin.tx_drblob.fileExtIconFolder}
      cObject.stdWrap.ifEmpty.cObject.file.import.wrap = default.gif
    }
    
    filename_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
    }
    
    filesize_stdWrap {
      bytes = 1
      bytes.labels = B| KB| MB| GB
      wrap = |
      if.isTrue.field = blob_size
    }
    
    filechecksum_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
    }
    
    filetype_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
    }


    images_stdWrap {
      wrap = |
      
      cObject = IMGTEXT
      cObject {
        imgList.field = images
        imgPath = uploads/pics/
        
        imgStart = 0
        imgMax = 1      
        imgObjNum = 1
        1 = IMAGE
        1.file.import.current = 1
        1.file.maxW = {$plugin.tx_drblob.listMaxW}px
        1.file.maxH = {$plugin.tx_drblob.listMaxH}px
      }
    }
    
    isFileAttached_stdWrap {
      setContentToCurrent = 1
      cObject = COA
      cObject.10 = TEXT
      cObject.10.value = tx-drblob-noFileAttached
      cObject.10.if.isFalse.current = 1
      cObject.20 = TEXT
      cObject.20.value = tx-drblob-fileAttached
      cObject.20.if.isTrue.current = 1
      wrap = class="|"
    }
    
    moreLink_stdWrap {
      wrap = |      
      typolink {
        ATagBeforeWrap = 1
        useCacheHash = 1
        no_cache = 0
        ATagParams = class="tx_drblob_morelink"
      }
    }

    title_stdWrap {
      wrap = |
    }

	version_stdWrap {
      wrap = |
    }
    
    vFolderTree_stdWrap {
      wrap = <div class="tx_drblob_list-vFolderTree">|</div>
    }
    
    vFolderTitleNO_stdWrap {
      wrap = |
    }

    vFolderTitleACT_stdWrap {
      wrap = <b>|</b>
    }
    
    vFolderIcon = IMAGE
    vFolderIcon {
      file = EXT:dr_blob/Resources/Public/FolderTree/folder.gif
      border = 0
      params = style="vertical-align: bottom; margin-right: 2px;" align="top" class="c-recIcon"
    }
    
    vFolderGfxFolder = typo3conf/ext/dr_blob/Resources/Public/FolderTree/
    vFolderTreeEnable = 0
    vFolderTreeInitialState = none
    vFolderTree_FolderSubscriptionMode = selected
  }


  topView {
    limit = 5
    listOrderBy = crdate
    listOrderDir = 1
    altSubpartMarker = TEMPLATE_PERSONAL
    alternatingLayouts = {$plugin.tx_drblob.alternatingLayouts}
    categoryDivider = ,
    categoryMode = 0
    categorySelection = 
    
    age_stdWrap {
      age = 1
    }

    author_stdWrap {
      wrap = |
    }

    category_stdWrap {
      wrap = <p>|</p>
    }
    
    date_stdWrap {
      strftime = {$plugin.tx_drblob.dateFormat}
    }
    
    description_stdWrap {
      wrap = <p>|</p>
      stripHtml = 1
      crop = {$plugin.tx_drblob.lenghtOfDescription} | ... | 1
    }
        
    downloadLink_stdWrap {
      wrap = |  
      if.isTrue.field = blob_size    
      typolink {
        ATagBeforeWrap = 1
        ATagParams = class="tx_drblob_downloadlink"
      }
    }
    
    downloadcount_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
    }

    email_stdWrap {
      wrap = |
      typolink {
        parameter.field = author_email
        ATagParams = class="tx_drblob_emaillink"
      }
    }
    
    fileicon_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
      cObject = IMAGE
      cObject.file.import = {$plugin.tx_drblob.fileExtIconFolder}
      cObject.file.import.field = blob_filext
      cObject.file.import.wrap = |.gif
      cObject.altText.field = blob_filext
      cObject.titleText.field = blob_filext

      cObject.stdWrap.ifEmpty.cObject = IMAGE
      cObject.stdWrap.ifEmpty.cObject.file.import = {$plugin.tx_drblob.fileExtIconFolder}
      cObject.stdWrap.ifEmpty.cObject.file.import.wrap = default.gif
    }
    
    filename_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
    }
    
    filesize_stdWrap {
      bytes = 1
      bytes.labels = B| KB| MB| GB
      wrap = |
      if.isTrue.field = blob_size
    }
    
    filechecksum_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
    }
    
    filetype_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
    }
    
    images_stdWrap {
      wrap = |
      
      cObject = IMGTEXT
      cObject {
        imgList.field = images
        imgPath = uploads/pics/
        
        imgStart = 0
        imgMax = 1      
        imgObjNum = 1
        1 = IMAGE
        1.file.import.current = 1
        1.file.maxW = {$plugin.tx_drblob.topMaxW}px
        1.file.maxH = {$plugin.tx_drblob.topMaxH}px
      }
    }
    
    isFileAttached_stdWrap {
      setContentToCurrent = 1
      cObject = COA
      cObject.10 = TEXT
      cObject.10.value = tx-drblob-noFileAttached
      cObject.10.if.isFalse.current = 1
      cObject.20 = TEXT
      cObject.20.value = tx-drblob-fileAttached
      cObject.20.if.isTrue.current = 1
      wrap = class="|"
    }
    
    moreLink_stdWrap {
      wrap = |      
      typolink {
        ATagBeforeWrap = 1
        useCacheHash = 1
        no_cache = 0
        ATagParams = class="tx_drblob_morelink"
      }
    }
    
	version_stdWrap {
      wrap = |
    }
    
    title_stdWrap {
      wrap = |
    }
  }
  
  
  personalView {
    limit = 5
    listOrderBy = tstamp
    listOrderDir = 1
    alternatingLayouts = {$plugin.tx_drblob.alternatingLayouts}
    altSubpartMarker = TEMPLATE_PERSONAL
    categoryDivider = ,
    categoryMode = 0
    categorySelection = 
    
    age_stdWrap {
      age = 1
    }

    author_stdWrap {
      wrap = |
    }

    category_stdWrap {
      wrap = <p>|</p>
    }

    date_stdWrap {
      strftime = {$plugin.tx_drblob.dateFormat}
    }
    
    description_stdWrap {
      wrap = <p>|</p>
      stripHtml = 1
      crop = {$plugin.tx_drblob.lenghtOfDescription} | ... | 1
    }
    
    downloadLink_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
      typolink {
        ATagBeforeWrap = 1
        ATagParams = class="tx_drblob_downloadlink"
      }
    }
    
    downloadcount_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
    }

    email_stdWrap {
      wrap = |
      typolink {
        parameter.field = author_email
        ATagParams = class="tx_drblob_emaillink"
      }
    }

    fileicon_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
      cObject = IMAGE
      cObject.file.import = {$plugin.tx_drblob.fileExtIconFolder}
      cObject.file.import.field = blob_filext
      cObject.file.import.wrap = |.gif
      cObject.altText.field = blob_filext
      cObject.titleText.field = blob_filext

      cObject.stdWrap.ifEmpty.cObject = IMAGE
      cObject.stdWrap.ifEmpty.cObject.file.import = {$plugin.tx_drblob.fileExtIconFolder}
      cObject.stdWrap.ifEmpty.cObject.file.import.wrap = default.gif
    }
    
    filename_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
    }
    
    filesize_stdWrap {
      bytes = 1
      bytes.labels = B| KB| MB| GB
      wrap = |
      if.isTrue.field = blob_size
    }
    
    filechecksum_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
    }
    
    filetype_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
    }

    images_stdWrap {
      wrap = |
      
      cObject = IMGTEXT
      cObject {
        imgList.field = images
        imgPath = uploads/pics/
        
        imgStart = 0
        imgMax = 1      
        imgObjNum = 1
        1 = IMAGE
        1.file.import.current = 1
        1.file.maxW = {$plugin.tx_drblob.personalMaxW}px
        1.file.maxH = {$plugin.tx_drblob.personalMaxH}px
      }
    }

    isFileAttached_stdWrap {
      setContentToCurrent = 1
      cObject = COA
      cObject.10 = TEXT
      cObject.10.value = tx-drblob-noFileAttached
      cObject.10.if.isFalse.current = 1
      cObject.20 = TEXT
      cObject.20.value = tx-drblob-fileAttached
      cObject.20.if.isTrue.current = 1
      wrap = class="|"
    }
    
    moreLink_stdWrap {
      wrap = |      
      typolink {
        ATagBeforeWrap = 1
        useCacheHash = 1
        no_cache = 0
        ATagParams = class="tx_drblob_morelink"
      }
    }
    
	version_stdWrap {
      wrap = |
    }
    
    title_stdWrap {
      wrap = |
    }
  }


  singleView {
    altSubpartMarker = TEMPLATE_SINGLE
    
    substitutePagetitle = 1
    substituteIndextitle = 1
    categoryDivider = ,
    
    age_stdWrap {
      age = 1
    }

    author_stdWrap {
      wrap = |
      typolink {
        parameter.field = author_email
        ATagParams = class="tx_drblob_emaillink"
      }
    }
    
    backLink_stdWrap {
      wrap = |      
      typolink {
        ATagBeforeWrap = 1
        ATagParams = class="tx_drblob_backlink"
      }
    }
    
    category_stdWrap {
      wrap = <ul>|</ul>
      split {
        token < plugin.tx_drblob_pi1.singleView.categoryDivider 
        cObjNum = 1
        1.current = 1
        1.wrap = <li>|</li>
      }
    }

    date_stdWrap {
      strftime = {$plugin.tx_drblob.dateFormat}
    }
    
    description_stdWrap {
      stripHtml = 0
    }
    
    downloadLink_stdWrap {
      wrap = | 
      typolink {
        ATagBeforeWrap = 1
        ATagParams = class="tx_drblob_downloadlink"
      }
    }
    
    downloadcount_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
    }

    email_stdWrap {
      wrap = |
      typolink {
        parameter.field = author_email
        ATagParams = class="tx_drblob_emaillink"
      }
    }
    
    fileicon_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
      cObject = IMAGE
      cObject.file.import = {$plugin.tx_drblob.fileExtIconFolder}
      cObject.file.import.field = blob_filext
      cObject.file.import.wrap = |.gif
      cObject.altText.field = blob_filext
      cObject.titleText.field = blob_filext

      cObject.stdWrap.ifEmpty.cObject = IMAGE
      cObject.stdWrap.ifEmpty.cObject.file.import = {$plugin.tx_drblob.fileExtIconFolder}
      cObject.stdWrap.ifEmpty.cObject.file.import.wrap = default.gif
    }
    
    filename_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
    }
    
    filesize_stdWrap {
      bytes = 1
      bytes.labels = Bytes| KiloBytes| MegaBytes| GigaBytes
      wrap = |
      if.isTrue.field = blob_size
    }
    
    filechecksum_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
    }
    
    filetype_stdWrap {
      wrap = |
      if.isTrue.field = blob_size
    }
    
    images_stdWrap {
      wrap = |
      cObject = IMGTEXT
      cObject {
        imgList.field = images
        imgPath = uploads/pics/
        imgStart = 0
        cols = 3
        colspace = 0
        rowspace = 2
      
        imgObjNum = 1
        1 = IMAGE
        1.file.import.current = 1
        1.file.maxW = {$plugin.tx_drblob.singleMaxW}px
        1.file.maxH = {$plugin.tx_drblob.singleMaxH}px
      }
    }

    isFileAttached_stdWrap {
      setContentToCurrent = 1
      cObject = COA
      cObject.10 = TEXT
      cObject.10.value = tx-drblob-noFileAttached
      cObject.10.if.isFalse.current = 1
      cObject.20 = TEXT
      cObject.20.value = tx-drblob-fileAttached
      cObject.20.if.isTrue.current = 1
      wrap = class="|"
    }
    
	version_stdWrap {
      wrap = |
    }
    
    title_stdWrap {
      wrap = <strong>|</strong>
    }
  }


  _LOCAL_LANG {
    default {
      list_button_download = [download]
      list_button_show = [more]
      personal_button_download = [download]
      personal_button_show = [more]
      top_button_download = [download]
      top_button_show = [more]
    }
  }
  
  _CSS_DEFAULT_STYLE (
    .tx-drblob-noFileAttached { display: none; }
    .tx-drblob-fileAttached { display: inline; }
    .tx_drblob_list-vFolderTree { float: left; }
  )
}


 /********************************************************************************
  * Configuration for the "Record Insert" Mode
  */
tx_drblob_content < plugin.tx_drblob_pi1
tx_drblob_content {
  code = single
  singleView.altSubpartMarker = TEMPLATE_SINGLE_RECORDINSERT
}


 /********************************************************************************
  * Integration into linkhandler Extension
  */
plugin.tx_linkhandler.tx_drblob_content {
  forceLink = 0
  parameter = {$plugin.tx_drblob.downloadPID}
  no_cache = 1
  additionalParams = &tx_drblob_pi1[downloadUid]={field:uid}
  additionalParams.insertData = 1 
  useCacheHash = 0
}